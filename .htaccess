# ========= SPA routing (Vite + React Router) =========
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  # Sirve index.html para cualquier ruta que no sea archivo/carpeta real
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /index.html [L]
</IfModule>

# ========= Caching headers =========
<IfModule mod_headers.c>
  # 1) NUNCA cachear HTML (forzar que se baje el index.html nuevo en cada visita)
  <FilesMatch "\.(?:html)$">
    Header set Cache-Control "no-cache, no-store, must-revalidate"
    Header set Pragma "no-cache"
    Header set Expires "0"
  </FilesMatch>

  # 2) Cache LARGO para assets con hash (Vite genera nombres con hash)
  #    Puedes cachearlos por 1 año + immutable (el nombre cambia si cambia el contenido)
  <FilesMatch "\.(?:js|mjs|css|png|jpg|jpeg|gif|webp|svg|ico|woff|woff2|ttf|eot)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>

  # 3) (Opcional) Fallback corto para archivos SIN hash colocados en /static o similares
  #    Útil si subes PDFs, imágenes o archivos que podrías reemplazar con el mismo nombre.
  <LocationMatch "^/(?:static|assets|files|uploads)/">
    Header set Cache-Control "public, max-age=300, must-revalidate"
  </LocationMatch>
</IfModule>

# ========= (Opcional) Expires (si tu servidor lo soporta) =========
<IfModule mod_expires.c>
  ExpiresActive On
  # HTML expira inmediatamente
  ExpiresByType text/html "access plus 0 seconds"
  # Assets con hash: 1 año
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType text/javascript "access plus 1 year"
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType font/woff2 "access plus 1 year"
  ExpiresByType font/woff "access plus 1 year"
</IfModule>
